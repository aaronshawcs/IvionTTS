--has the player's deck been assigned this guid
setup = false

gameManager_GUID = 'ae7b3c'
blueAction_GUID = 'd51b94'


function onLoad(save_state)
  gameManager = getObjectFromGUID(gameManager_GUID)
  blueAction = getObjectFromGUID(blueAction_GUID)
  deckinfo = nil
end

--args[1] = deckID
--args[2] = zoneID
function makeDeck (args)
  if deckinfo then
    return false
  end
  deck = getObjectFromGUID(args[1])
  zone = getObjectFromGUID(args[2])
  cards = deck.getObjects()
  self.setPosition(zone.getPosition(), false, false)
  self.setRotation(deck.getRotation())
  self.setLock(false)
  for i,v in ipairs(deck.getObjects()) do
    deck.takeObject({position = zone.getPosition()})
  end
  deckinfo = {deckID = self.guid, zoneID = zone.guid}
  return self.guid
end

function onCollisionEnter(collision_info)
  updateCardCount()
end

--TODO add functionality for 1 card remaining
function updateCardCount()
  deck = getObjectFromGUID(deckinfo['deckID'])
  cardcount = deck.getQuantity()
  if not setup then
    if cardcount > 45 then
      deck.takeObject({top = false}).destruct()
      deck.takeObject({top = false}).destruct()
      counter = spawnObject({
        type='3Dtext',
        --position = {zone.getPosition().x, 1.7, zone.getPosition().z},
        rotation = {90.00, 180.00, 0.00}})
      counter.TextTool.setValue(tostring(cardcount-2))
      deckinfo['counter'] = counter
      self.deal(5, "Blue")
      setup = true
      zone.destruct()
    end
  else
    if cardcount > 0 then
      counter.TextTool.setValue(tostring(cardcount))
    else
      counter.destruct()
      --counter.TextTool.setValue("Exhausted!")
    end
    counter.setPosition({deck.getPosition().x, deck.getPosition().y * 1.30, deck.getPosition().z})
  end
end

function onPlayerTurnStart(player_color_start, player_color_previous)
  if setup and player_color_start == "Blue" then
  	self.deal(1, "Blue")
    --[[actions = gameManager.call("getAttributes", {color = "Blue"}).action
    if actions+3 > 5 then
      blueAction.setValue(5)
    else
      blueAction.setValue(actions+3)
      gameManager.call("setAttribute", {color = "Blue", attribute = 'action', value = 5})
    end]]
  end
end