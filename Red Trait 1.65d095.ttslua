--Scripting Trigger for making and assigning Red Ultimate

reservedTrait = nil
--deckBuilder_GUID = 'fa7170'
--placeDeckHereText_GUID = "4357db"
gameManager_GUID = 'ae7b3c'
placeHereText_GUID = "bbe63f"
function onLoad(save_state)
  placeHereText = getObjectFromGUID(placeHereText_GUID)
  gameManager = getObjectFromGUID(gameManager_GUID)
  deckBuilder = getObjectFromGUID(deckBuilder_GUID)
  trait = nil
  played = false
  playing = false --is the ult currently on the stack?
  --placeDeckHereText = getObjectFromGUID(placeDeckHereText_GUID)
end


function onObjectEnterScriptingZone(zone, object)
  -- card_info table:
  -- action        int
  -- power         int
  -- range         int
  -- types         table:
  --               [TYPENAME]        bool
  -- control       table
  --               [CONTROLNAME]     bool
  if zone == self and trait == nil then
      if (object.tag == "Card") and not reservedUlt then
        card_info = gameManager.call("getCardStats", {name = object.getName()})
        if card_info.types.trait then
          --print('Ultimate')
          reservedTrait = object
          if self.getButtons() == nil then
            local button_parameters = {}
            button_parameters.click_function = 'assignTrait'
            button_parameters.label = "Assign\nTrait"
            button_parameters.function_owner = self
            button_parameters.position = {2.00, -0.45, -0.0}
            button_parameters.rotation = {00.00, 180.00, 0.00}
            button_parameters.font_size = 6000
            button_parameters.width = 4000
            button_parameters.height = 2000
            --button_parameters.font_color = {1,1,1}
            button_parameters.scale = {0.200, 0.2000, 0.902564102}
            self.createButton(button_parameters)
            --deckBuilder.call("makeDeck", {object.guid, zone.guid})
          end

        end
      end
  end
end

function onObjectLeaveScriptingZone(zone, object)
  if zone == self then
      if (object == reservedTrait) then
          reservedTrait = nil
          self.clearButtons()
      end
  end
end

function assignTrait()
  trait = reservedTrait
  self.clearButtons()
  updatePlayability(gameManager.call('getAttributes', {color = "Red"}))
  placeHereText.destruct()
  --placeDeckHereText.destruct()
  --reservedUlt.setRotation({reservedDeck.getRotation().x, reservedDeck.getRotation().y, 180})
  --deckBuilder.call("makeDeck", {reservedDeck.guid, self.guid})
end

function playedThisTurn()
  played = true
  playing = true
end

function getPlayed()
  return played
end

function offStack()
  playing = false
end

function updatePlayability(attributes)
  if trait then
    if not playing then
      if not played and gameManager.call('checkIfPlayable', {name = trait.getName(), attributes = attributes, color = "Red"}).playable then
        trait.highlightOn({r = 0.15, g = 1, b = 0.3})
      else
        trait.highlightOn({r = 1, g = 0, b = 0})
      end
    end
  end
end

function getTraitName()
  if trait then
    return trait.getName()
  end
end

function getDestination()
  return self.getPosition()
end

function onPlayerTurnStart(player_color_start, player_color_previous)
  if player_color_start == "Red" then
    played = false
  end
  updatePlayability(gameManager.call('getAttributes', {color = "Red"}))
end